#+TITLE: GAN

https://arxiv.org/abs/1406.2661

[[file:./images/screenshot-04.png]]

#+BEGIN_SRC python :noweb yes :tangle yes
<<core>>
#+END_SRC

* Implementation
:PROPERTIES:
:header-args: :noweb-ref core
:END:


#+BEGIN_SRC python :noweb yes
import torch
import torch.nn as nn
import torch.nn.functional as F

<<discriminator>>

<<generator>>

def main():
    <<preprocessing>>
    disc = discriminator()
    gen = generator()

    k = 1
    for training_inter in range(500):
        for step in range(k):
            ...

if __name__ == '__main__':
    main()
#+END_SRC

* Preprocessing
:PROPERTIES:
:header-args: :noweb-ref preprocessing
:END:

Parse arguments
#+BEGIN_SRC python
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('data', help='path to data directory')
parser.add_argument('--batch', type=int, default=64, help='batch size')
parser.add_argument('--img_size', type=int, default=28, help='image size')
args = parser.parse_args()
#+END_SRC

Load data
#+BEGIN_SRC python
from torch.utils.data import DataLoader
from torchvision import datasets
import torchvision.transforms as transforms
dataloader = torch.utils.data.DataLoader(
    datasets.MNIST(
        args.data,
        train=True,
        download=True,
        transform=transforms.Compose(
            [transforms.Resize(args.img_size), transforms.ToTensor(), transforms.Normalize([0.5], [0.5])]
        ),
    ),
    batch_size=args.batch,
    shuffle=True,
)
#+END_SRC

* Discriminator
:PROPERTIES:
:header-args: :noweb-ref disciminator
:END:

#+BEGIN_SRC python

class discriminator(nn.Module):
    def __init__(self, image_size=28):
      super(discriminator, self).__init__()


      self.fc1 = nn.Linear(image_size * image_size, 128)
      self.fc2 = nn.Linear(128, 64)
      self.fc3 = nn.linear(64, 1)

    def forward(self, x):
        x = x.view(-1, 1 * 4 *4)
        x = F.relu(self.fc1(x))
        x = F.relu(self.fc2(x))
        x = F.sigmoid(self.fc3(x))
        return x
#+END_SRC

* Generator
:PROPERTIES:
:header-args: :noweb-ref generator
:END:

